---
# - hosts: localhost
#   gather_facts: false
#   tasks:
    - name: Create VM image directory
      file:
        path: '{{ disk_dir }}/{{ item.vm_name }}'
        state: directory
      become: 'yes'
    - name: Create VM disk image from base image
      command: >-
        qemu-img create -f qcow2 -F qcow2 -o backing_file={{ disk_dir
        }}/jammy-server-cloudimg-amd64.img {{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.qcow2
      args:
        creates: '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.qcow2'
      become: 'yes'
    - name: Resize VM disk image
      command: 'qemu-img resize {{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.qcow2 {{ disk_space }}'
      become: 'yes'
    - name: Parse VM meta-data file
      become: 'yes'
      template:
        src: '{{ sub_dir }}/meta-data.j2'
        dest: '{{ disk_dir }}/{{ item.vm_name }}/meta-data'
    - name: Parse VM user-data file
      become: 'yes'
      template:
        src: '{{ sub_dir }}/user-data.j2'
        dest: '{{ disk_dir }}/{{ item.vm_name }}/user-data'
    - name: Create cloud-init ISO
      become: 'yes'
      command: >-
        genisoimage -output "{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}-cidata.iso" -volid cidata -joliet -rock
        "{{ disk_dir }}/{{ item.vm_name }}/meta-data"
        "{{ disk_dir }}/{{ item.vm_name }}/user-data"
    - name: create VM template
      become: yes
      copy:
        src: '{{ sub_dir }}/vm_main.xml.j2'
        dest: '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.xml.j2'
    - name: Parse VM interfaces data
      template:
        src: '{{ sub_dir }}/vm_parser.xml.j2'
        dest: '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}_interfaces.xml'
      become: 'yes'
    - name: Add interface to VM template
      become: yes
      blockinfile:
        path: '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.xml.j2'
        insertbefore: "<serial type='pty'>"
        block: "{{ lookup('file', '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}_interfaces.xml') }}"
    - name: Customize VM disk image
      become: 'yes'
      command: >-
        virt-customize -a {{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.qcow2 --firstboot-command "bash -c 'ip link set dev enp1s0 up && dhclient enp1s0'"
    - name: Define VM
      become: yes
      virt:
        name: "{{ item.vm_name }}"
        command: define
        xml: "{{ lookup('template', '{{ disk_dir }}/{{ item.vm_name }}/{{ item.vm_name }}.xml.j2') }}"
    - name: Create VM
      become: yes
      virt:
        name: "{{ item.vm_name }}"
        command: create
        state: destroyed
    - name: Start VM
      become: yes
      virt:
        name: "{{ item.vm_name }}"
        command: start

